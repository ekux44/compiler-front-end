1.1 PROGRAM -> program id ( IDENTIFIER_LIST ) ; DECLARATIONS SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT .
2.1 IDENTIFIER_LIST -> id
2.2 IDENTIFIER_LIST -> IDENTIFIER_LIST , id
3.1 DECLARATIONS -> DECLARATIONS var id : TYPE ;
3.2 DECLARATIONS -> e
4.1 TYPE -> STANDARD_TYPE
4.2 TYPE -> array [ num .. num ] of STANDARD_TYPE
5.1 STANDARD_TYPE -> integer
5.2 STANDARD_TYPE -> real
6.1 SUBPROGRAM_DECLARATIONS -> SUBPROGRAM_DECLARATIONS SUBPROGRAM_DECLARATION ;
6.2 SUBPROGRAM_DECLARATIONS -> e
7.1 SUBPROGRAM_DECLARATION -> SUBPROGRAM_HEAD DECLARATIONS SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT
8.1 SUBPROGRAM_HEAD -> procedure id ARGUMENTS ;
9.1 ARGUMENTS -> ( PARAMETER_LIST )
9.2 ARGUMENTS -> e
10.1 PARAMETER_LIST -> id : TYPE
10.2 PARAMETER_LIST -> PARAMETER_LIST ; id : TYPE
11.1 COMPOUND_STATEMENT -> begin OPTIONAL_STATEMENTS end
12.1 OPTIONAL_STATEMENTS -> STATEMENT_LIST
12.2 OPTIONAL_STATEMENTS ->  e
13.1 STATEMENT_LIST -> STATEMENT
13.2 STATEMENT_LIST -> STATEMENT_LIST ; STATEMENT 
14.1 STATEMENT -> VARIABLE assignop EXPRESSION
14.2 STATEMENT -> PROCEDURE_STATEMENT
14.3 STATEMENT -> COMPOUND_STATEMENT
14.4 STATEMENT -> if EXPRESSION then STATEMENT
14.5 STATEMENT -> if EXPRESSION then STATEMENT else STATEMENT
14.6 STATEMENT -> while EXPRESSION do STATEMENT
15.1 VARIABLE -> id
15.2 VARIABLE -> id [ EXPRESSION ]
16.1 PROCEDURE_STATEMENT -> call id
16.2 PROCEDURE_STATEMENT ->  call id ( EXPRESSION_LIST )
17.1 EXPRESSION_LIST -> EXPRESSION
17.2 EXPRESSION_LIST -> EXPRESSION_LIST , EXPRESSION
18.1 EXPRESSION -> SIMPLE_EXPRESSION
18.2 EXPRESSION -> SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION
19.1 SIMPLE_EXPRESSION -> TERM
19.2 SIMPLE_EXPRESSION -> SIGN TERM
19.3 SIMPLE_EXPRESSION -> SIMPLE_EXPRESSION addop TERM
20.1 TERM -> FACTOR
20.2 TERM -> TERM mulop FACTOR
21.1 FACTOR -> id
21.2 FACTOR -> num
21.3 FACTOR -> ( EXPRESSION )
21.4 FACTOR -> not FACTOR
21.5 FACTOR -> id [ EXPRESSION ]
22.1 SIGN -> +
22.2 SIGN -> -