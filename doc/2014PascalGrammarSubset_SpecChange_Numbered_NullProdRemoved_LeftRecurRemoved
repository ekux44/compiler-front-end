1.1.1.1 PROGRAM -> program id ( IDENTIFIER_LIST ) ; DECLARATIONS SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT .
1.1.2.1 PROGRAM -> program id ( IDENTIFIER_LIST ) ; SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT .
1.1.3.1 PROGRAM -> program id ( IDENTIFIER_LIST ) ; DECLARATIONS COMPOUND_STATEMENT .
1.1.4.1 PROGRAM -> program id ( IDENTIFIER_LIST ) ; COMPOUND_STATEMENT .
2.1.1.1 IDENTIFIER_LIST -> id IDENTIFIER_LIST`
2.2.1.1 IDENTIFIER_LIST` -> , id IDENTIFIER_LIST`
2.2.1.2 IDENTIFIER_LIST` -> e
3.1.1.1 DECLARATIONS -> var id : TYPE ; DECLARATIONS`
3.1.2.1 DECLARATIONS` -> var id : TYPE ;
3.1.2.2 DECLARATIONS` -> e
4.1.1.1 TYPE -> STANDARD_TYPE
4.2.1.1 TYPE -> array [ num .. num ] of STANDARD_TYPE
5.1.1.1 STANDARD_TYPE -> integer
5.2.1.1 STANDARD_TYPE -> real
6.1.1.1 SUBPROGRAM_DECLARATIONS -> SUBPROGRAM_DECLARATION ; SUBPROGRAM_DECLARATIONS`
6.1.2.1 SUBPROGRAM_DECLARATIONS` -> SUBPROGRAM_DECLARATION ; SUBPROGRAM_DECLARATIONS`
6.1.2.2 SUBPROGRAM_DECLARATIONS` -> e
7.1.1.1 SUBPROGRAM_DECLARATION -> SUBPROGRAM_HEAD DECLARATIONS SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT
7.1.2.1 SUBPROGRAM_DECLARATION -> SUBPROGRAM_HEAD SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT
7.1.3.1 SUBPROGRAM_DECLARATION -> SUBPROGRAM_HEAD DECLARATIONS COMPOUND_STATEMENT
7.1.4.1 SUBPROGRAM_DECLARATION -> SUBPROGRAM_HEAD COMPOUND_STATEMENT
8.1.1.1 SUBPROGRAM_HEAD -> procedure id ARGUMENTS ;
8.1.2.1 SUBPROGRAM_HEAD -> procedure id ;
9.1.1.1 ARGUMENTS -> ( PARAMETER_LIST )
10.1.1.1 PARAMETER_LIST -> id : TYPE PARAMETER_LIST`
10.2.1.1 PARAMETER_LIST` -> ; id : TYPE PARAMETER_LIST`
10.2.1.2 PARAMETER_LIST` -> e
11.1.1.1 COMPOUND_STATEMENT -> begin OPTIONAL_STATEMENTS end
11.1.2.1 COMPOUND_STATEMENT -> begin end
12.1.1.1 OPTIONAL_STATEMENTS -> STATEMENT_LIST
13.1.1.1 STATEMENT_LIST -> STATEMENT STATEMENT_LIST`
13.2.1.1 STATEMENT_LIST` -> ; STATEMENT STATEMENT_LIST`
13.2.1.2 STATEMENT_LIST` -> e
14.1.1.1 STATEMENT -> VARIABLE assignop EXPRESSION
14.2.1.1 STATEMENT -> PROCEDURE_STATEMENT
14.3.1.1 STATEMENT -> COMPOUND_STATEMENT
14.4.1.1 STATEMENT -> if EXPRESSION then STATEMENT
14.5.1.1 STATEMENT -> if EXPRESSION then STATEMENT else STATEMENT
14.6.1.1 STATEMENT -> while EXPRESSION do STATEMENT
15.1.1.1 VARIABLE -> id
15.2.1.1 VARIABLE -> id [ EXPRESSION ]
16.1.1.1 PROCEDURE_STATEMENT -> call id
16.2.1.1 PROCEDURE_STATEMENT ->  call id ( EXPRESSION_LIST )
17.1.1.1 EXPRESSION_LIST -> EXPRESSION EXPRESSION_LIST`
17.2.1.1 EXPRESSION_LIST` -> , EXPRESSION EXPRESSION_LIST`
17.2.1.2 EXPRESSION_LIST` -> e
18.1.1.1 EXPRESSION -> SIMPLE_EXPRESSION
18.2.1.1 EXPRESSION -> SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION
19.1.1.1 SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION`
19.2.1.1 SIMPLE_EXPRESSION -> SIGN TERM SIMPLE_EXPRESSION`
19.3.1.1 SIMPLE_EXPRESSION' -> addop TERM SIMPLE_EXPRESSION`
19.3.2.1 SIMPLE_EXPRESSION' -> e
20.1.1.1 TERM -> FACTOR TERM`
20.2.1.1 TERM` -> mulop FACTOR TERM`
20.2.2.1 TERM` -> e
21.1.1.1 FACTOR -> id
21.2.1.1 FACTOR -> num
21.3.1.1 FACTOR -> ( EXPRESSION )
21.4.1.1 FACTOR -> not FACTOR
21.5.1.1 FACTOR -> id [ EXPRESSION ]
22.1.1.1 SIGN -> +
22.2.1.1 SIGN -> -