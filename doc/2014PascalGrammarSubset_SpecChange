PROGRAM -> 
	program id ( IDENTIFIER_LIST ) ;
	DECLARATIONS
	SUBPROGRAM_DECLARATIONS
	COMPOUND_STATEMENT
	.
IDENTIFIER_LIST ->
	id
	| IDENTIFIER_LIST , id
DECLARATIONS ->
	DECLARATIONS var id : TYPE ;
	| e
TYPE ->
	STANDARD_TYPE
	| array [ num .. num ] of STANDARD_TYPE
STANDARD_TYPE ->
	integer
	| real
SUBPROGRAM_DECLARATIONS ->
	SUBPROGRAM_DECLARATIONS SUBPROGRAM_DECLARATION ;
	| e
SUBPROGRAM_DECLARATION ->
	SUBPROGRAM_HEAD DECLARATIONS SUBPROGRAM_DECLARATIONS COMPOUND_STATEMENT
SUBPROGRAM_HEAD ->
	procedure id ARGUMENTS ;
ARGUMENTS ->
	( PARAMETER_LIST )
	| e
PARAMETER_LIST ->
	id : TYPE
	| PARAMETER_LIST ; id : TYPE
COMPOUND_STATEMENT ->
	begin
	OPTIONAL_STATEMENTS
	end
OPTIONAL_STATEMENTS ->
	STATEMENT_LIST
	| e
STATEMENT_LIST ->
	STATEMENT
	| STATEMENT_LIST ; STATEMENT
STATEMENT ->
	VARIABLE assignop EXPRESSION
	| PROCEDURE_STATEMENT
	| COMPOUND_STATEMENT
	| if EXPRESSION then STATEMENT
	| if EXPRESSION then STATEMENT else STATEMENT
	| while EXPRESSION do STATEMENT
VARIABLE ->
	id
	| id [ EXPRESSION ]
PROCEDURE_STATEMENT ->
	call id
	| call id ( EXPRESSION_LIST )
EXPRESSION_LIST ->
	EXPRESSION
	| EXPRESSION_LIST , EXPRESSION
EXPRESSION ->
	SIMPLE_EXPRESSION
	| SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION
SIMPLE_EXPRESSION ->
	TERM
	| SIGN TERM
	| SIMPLE_EXPRESSION addop TERM
TERM ->
	FACTOR
	| TERM mulop FACTOR
FACTOR ->
	id
	| num
	| ( EXPRESSION )
	| not FACTOR
	| id [ EXPRESSION ]
SIGN ->
	+ | -